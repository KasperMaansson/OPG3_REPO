{"ast":null,"code":"// Returner distance mellem 2 lokationer (koordinater angivet) i kilometer\nexport default function haverDistance(lat1, lat2, lon1, lon2) {\n  var R = 6371; // km radius of planet earth\n\n  var dLat = toRad(lat2 - lat1);\n  var dLon = toRad(lon2 - lon1);\n  var lat1r = toRad(lat1);\n  var lat2r = toRad(lat2);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1r) * Math.cos(lat2r);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d; // i kilometer\n}\n\nfunction toRad(Value) {\n  // Converts numeric degrees to radians\n  return Value * Math.PI / 180;\n}","map":{"version":3,"sources":["/Users/kaspermaansson/Documents/ITU/1. Semester/Prototyping af interaktive teknologier/VSC/OPG3/src/myHaverSine.js"],"names":["haverDistance","lat1","lat2","lon1","lon2","R","dLat","toRad","dLon","lat1r","lat2r","a","Math","sin","cos","c","atan2","sqrt","d","Value","PI"],"mappings":"AAAA;AACA,eAAe,SAASA,aAAT,CAAuBC,IAAvB,EAA4BC,IAA5B,EAAiCC,IAAjC,EAAsCC,IAAtC,EAA2C;AACtD,MAAIC,CAAC,GAAG,IAAR,CADsD,CACxC;;AACd,MAAIC,IAAI,GAAGC,KAAK,CAAEL,IAAI,GAACD,IAAP,CAAhB;AACA,MAAIO,IAAI,GAAGD,KAAK,CAAEH,IAAI,GAACD,IAAP,CAAhB;AACA,MAAIM,KAAK,GAAGF,KAAK,CAACN,IAAD,CAAjB;AACA,MAAIS,KAAK,GAAGH,KAAK,CAACL,IAAD,CAAjB;AACA,MAAIS,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASP,IAAI,GAAC,CAAd,IAAmBM,IAAI,CAACC,GAAL,CAASP,IAAI,GAAC,CAAd,CAAnB,GACAM,IAAI,CAACC,GAAL,CAASL,IAAI,GAAC,CAAd,IAAmBI,IAAI,CAACC,GAAL,CAASL,IAAI,GAAC,CAAd,CAAnB,GACAI,IAAI,CAACE,GAAL,CAASL,KAAT,CADA,GACkBG,IAAI,CAACE,GAAL,CAASJ,KAAT,CAF1B;AAGA,MAAIK,CAAC,GAAG,IAAIH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,IAAL,CAAUN,CAAV,CAAX,EAAyBC,IAAI,CAACK,IAAL,CAAU,IAAEN,CAAZ,CAAzB,CAAZ;AACA,MAAIO,CAAC,GAAGb,CAAC,GAAGU,CAAZ;AAEA,SAAOG,CAAP,CAZsD,CAY5C;AACb;;AAED,SAASX,KAAT,CAAeY,KAAf,EAAqB;AACjB;AACA,SAAOA,KAAK,GAAGP,IAAI,CAACQ,EAAb,GAAkB,GAAzB;AACH","sourcesContent":["// Returner distance mellem 2 lokationer (koordinater angivet) i kilometer\nexport default function haverDistance(lat1,lat2,lon1,lon2){\n    let R = 6371; // km radius of planet earth\n    let dLat = toRad((lat2-lat1));\n    let dLon = toRad((lon2-lon1));\n    let lat1r = toRad(lat1);\n    let lat2r = toRad(lat2);\n    let a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.sin(dLon/2) * Math.sin(dLon/2) * \n            Math.cos(lat1r) * Math.cos(lat2r);\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    let d = R * c;\n\n    return d; // i kilometer\n}\n\nfunction toRad(Value){\n    // Converts numeric degrees to radians\n    return Value * Math.PI / 180;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}